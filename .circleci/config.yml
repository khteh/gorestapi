version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.4
  slack: circleci/slack@4.10.1
executors:
  go:
    docker:
      - image: circleci/golang:latest
references:
  workspace_root: &workspace_root ~/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

defaults: &defaults # Default directory to run the steps in.
  working_directory: *workspace_root

jobs:
  build_and_test:
    <<: *defaults
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run: go test github.com/khteh/fibonacci github.com/khteh/greetings
      - run: go build
      - setup_remote_docker:
          docker_layer_caching: true
      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
      - run:
          name: Build docker image
          command: docker build -t khteh/gorestapi:latest .
      - run:
          name: Login to docker hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Push images to docker hub
          command: docker push khteh/gorestapi:latest
  deploy-eks:
    working_directory: /tmp
    docker:
      - image: khteh/ubuntu:latest
    steps:
      - attach_workspace:
          at: /tmp
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Use the saved build number here
          command: |
            echo 'export CIRCLE_BUILD_NUM_DOCKER="$(cat /tmp/docker-build_number.txt)"' >> $BASH_ENV
            . $BASH_ENV
            echo CIRCLE_BUILD_NUM_DOCKER: $CIRCLE_BUILD_NUM_DOCKER
      - run:
          name: Set Default AWS Region
          command: aws configure set default.region $AWS_REGION
      - run:
          name: Set AWS Access Key
          command: aws configure set aws_access_key_id $AWS_ACCESS_KEY
      - run:
          name: Set AWS Secret Key
          command: aws configure set aws_secret_access_key $AWS_SECRET_KEY
      - run:
          name: Update Kubectl Configuration with cluster name
          command: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - run:
          name: Update Application
          command: |
            kubectl patch statefulset aspnetcorewebapi --type='json' -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/image", "value":"'$AWS_ACCOUNT_ID'.dkr.ecr.ap-southeast-1.amazonaws.com/aspnetcorewebapi:'$CIRCLE_BUILD_NUM_DOCKER'"}]'
workflows:
  main:
    jobs:
      - build_and_test
#      - deploy-eks:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
